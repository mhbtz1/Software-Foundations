DIGEST 966bdb58446dbf9190c8d311367cb4f7
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n var
R1023:1023 LF.Tactics <> m var
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n var
R1012:1012 LF.Tactics <> m var
prf 1540:1545 <> silly2
R1567:1569 Coq.Init.Datatypes <> nat ind
R1580:1585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1586:1586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1621:1623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> n var
R1619:1619 LF.Tactics <> o var
R1624:1624 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1626:1626 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1625:1625 LF.Tactics <> m var
R1627:1627 LF.Tactics <> p var
R1592:1595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1601:1603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1598:1598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1600:1600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1597:1597 LF.Tactics <> n var
R1599:1599 LF.Tactics <> o var
R1604:1604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1606:1606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1605:1605 LF.Tactics <> m var
R1607:1607 LF.Tactics <> p var
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1587:1587 LF.Tactics <> n var
R1591:1591 LF.Tactics <> m var
R1576:1578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1575:1575 LF.Tactics <> n var
R1579:1579 LF.Tactics <> m var
prf 2162:2168 <> silly2a
R2186:2188 Coq.Init.Datatypes <> nat ind
R2207:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2214:2214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2261:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> n var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> m var
R2229:2231 Coq.Init.Datatypes <> nat ind
R2248:2251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2255:2257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2252:2252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2254:2254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2253:2253 LF.Tactics <> q var
R2258:2258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2260:2260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2259:2259 LF.Tactics <> r var
R2240:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2239:2239 LF.Poly <> :::'('_x_','_x_')' not
R2236:2236 LF.Tactics <> q var
R2238:2238 LF.Tactics <> q var
R2243:2243 LF.Poly <> :::'('_x_','_x_')' not
R2245:2245 LF.Poly <> :::'('_x_','_x_')' not
R2247:2247 LF.Poly <> :::'('_x_','_x_')' not
R2244:2244 LF.Tactics <> r var
R2246:2246 LF.Tactics <> r var
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2194 LF.Poly <> :::'('_x_','_x_')' not
R2196:2196 LF.Poly <> :::'('_x_','_x_')' not
R2198:2198 LF.Poly <> :::'('_x_','_x_')' not
R2195:2195 LF.Tactics <> n var
R2197:2197 LF.Tactics <> n var
R2202:2202 LF.Poly <> :::'('_x_','_x_')' not
R2204:2204 LF.Poly <> :::'('_x_','_x_')' not
R2206:2206 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Tactics <> m var
R2205:2205 LF.Tactics <> m var
prf 2475:2482 <> silly_ex
R2498:2498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2544:2550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2551:2551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2592:2598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2612:2617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2627:2629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2618:2620 LF.Basics <> odd def
R2623:2623 Coq.Init.Datatypes <> S constr
R2625:2625 LF.Tactics <> p var
R2630:2633 LF.Basics <> true constr
R2605:2607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2599:2602 LF.Basics <> even def
R2604:2604 LF.Tactics <> p var
R2608:2611 LF.Basics <> true constr
R2576:2579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2585:2587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2582 LF.Basics <> odd def
R2584:2584 LF.Tactics <> n var
R2588:2591 LF.Basics <> true constr
R2568:2570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2562:2565 LF.Basics <> even def
R2567:2567 LF.Tactics <> n var
R2571:2575 LF.Basics <> false constr
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2536:2538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2532:2532 Coq.Init.Datatypes <> S constr
R2534:2534 LF.Tactics <> n var
R2539:2543 LF.Basics <> false constr
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2509:2512 LF.Basics <> even def
R2514:2514 LF.Tactics <> n var
R2518:2521 LF.Basics <> true constr
prf 2971:2976 <> silly3
R2994:2996 Coq.Init.Datatypes <> nat ind
R3007:3012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3014:3016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3013:3013 LF.Tactics <> m var
R3017:3017 LF.Tactics <> n var
R3003:3005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3002:3002 LF.Tactics <> n var
R3006:3006 LF.Tactics <> m var
R3623:3625 LF.Poly <> rev def
prf 3637:3649 <> rev_exercise1
R3668:3671 LF.Poly <> list ind
R3673:3675 Coq.Init.Datatypes <> nat ind
R3691:3696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3699:3701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3697:3698 LF.Tactics <> l' var
R3702:3704 LF.Poly <> rev def
R3706:3706 LF.Tactics <> l var
R3682:3684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3681:3681 LF.Tactics <> l var
R3685:3687 LF.Poly <> rev def
R3689:3690 LF.Tactics <> l' var
R3769:3782 LF.Poly <> rev_involutive thm
R3769:3782 LF.Poly <> rev_involutive thm
def 4256:4271 <> trans_eq_example
R4297:4299 Coq.Init.Datatypes <> nat ind
R4321:4329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4343:4351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4357:4359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4352:4352 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4354:4354 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4356:4356 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4353:4353 LF.Tactics <> a var
R4355:4355 LF.Tactics <> b var
R4360:4360 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4362:4362 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4364:4364 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4361:4361 LF.Tactics <> e var
R4363:4363 LF.Tactics <> f var
R4335:4337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4330:4330 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4332:4332 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4334:4334 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4331:4331 LF.Tactics <> c var
R4333:4333 LF.Tactics <> d var
R4338:4338 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4340:4340 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4342:4342 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4339:4339 LF.Tactics <> e var
R4341:4341 LF.Tactics <> f var
R4313:4315 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4308:4308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4310:4310 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4312:4312 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4309:4309 LF.Tactics <> a var
R4311:4311 LF.Tactics <> b var
R4316:4316 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4318:4318 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4320:4320 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4317:4317 LF.Tactics <> c var
R4319:4319 LF.Tactics <> d var
prf 4624:4631 <> trans_eq
R4660:4660 LF.Tactics <> X var
R4671:4674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4680:4683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4685:4687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4684:4684 LF.Tactics <> n var
R4688:4688 LF.Tactics <> o var
R4676:4678 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4675:4675 LF.Tactics <> m var
R4679:4679 LF.Tactics <> o var
R4667:4669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4666:4666 LF.Tactics <> n var
R4670:4670 LF.Tactics <> m var
def 4943:4959 <> trans_eq_example'
R4985:4987 Coq.Init.Datatypes <> nat ind
R5009:5017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5031:5039 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5045:5047 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5040:5040 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5042:5042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5044:5044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5041:5041 LF.Tactics <> a var
R5043:5043 LF.Tactics <> b var
R5048:5048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5050:5050 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5052:5052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5049:5049 LF.Tactics <> e var
R5051:5051 LF.Tactics <> f var
R5023:5025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5018:5018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5020:5020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5022:5022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5019:5019 LF.Tactics <> c var
R5021:5021 LF.Tactics <> d var
R5026:5026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5028:5028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5030:5030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5027:5027 LF.Tactics <> e var
R5029:5029 LF.Tactics <> f var
R5001:5003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4996:4996 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4998:4998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5000:5000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4997:4997 LF.Tactics <> a var
R4999:4999 LF.Tactics <> b var
R5004:5004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5006:5006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5008:5008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5005:5005 LF.Tactics <> c var
R5007:5007 LF.Tactics <> d var
R5525:5525 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5527:5527 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5529:5529 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5507:5514 LF.Tactics <> trans_eq thm
R5525:5525 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5527:5527 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5529:5529 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5507:5514 LF.Tactics <> trans_eq thm
def 6009:6026 <> trans_eq_example''
R6052:6054 Coq.Init.Datatypes <> nat ind
R6076:6084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6098:6106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6112:6114 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6107:6107 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6109:6109 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6111:6111 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6108:6108 LF.Tactics <> a var
R6110:6110 LF.Tactics <> b var
R6115:6115 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6117:6117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6116:6116 LF.Tactics <> e var
R6118:6118 LF.Tactics <> f var
R6090:6092 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6085:6085 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6087:6087 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6089:6089 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6086:6086 LF.Tactics <> c var
R6088:6088 LF.Tactics <> d var
R6093:6093 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6095:6095 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6097:6097 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6094:6094 LF.Tactics <> e var
R6096:6096 LF.Tactics <> f var
R6068:6070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6063:6063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6065:6065 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6067:6067 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6064:6064 LF.Tactics <> a var
R6066:6066 LF.Tactics <> b var
R6071:6071 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6073:6073 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6075:6075 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6072:6072 LF.Tactics <> c var
R6074:6074 LF.Tactics <> d var
R6174:6174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6176:6176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6178:6178 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6174:6174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6176:6176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6178:6178 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6291:6307 <> trans_eq_exercise
R6329:6331 Coq.Init.Datatypes <> nat ind
R6356:6364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6376:6384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6385:6385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6391:6395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6406:6406 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6387:6389 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6386:6386 LF.Tactics <> n var
R6390:6390 LF.Tactics <> p var
R6396:6403 LF.Basics <> minustwo def
R6405:6405 LF.Tactics <> o var
R6365:6365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6371:6374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6367:6369 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6366:6366 LF.Tactics <> n var
R6370:6370 LF.Tactics <> p var
R6375:6375 LF.Tactics <> m var
R6341:6344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6355:6355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6340:6340 LF.Tactics <> m var
R6345:6352 LF.Basics <> minustwo def
R6354:6354 LF.Tactics <> o var
prf 7829:7839 <> S_injective
R7857:7859 Coq.Init.Datatypes <> nat ind
R7874:7879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7881:7883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7880:7880 LF.Tactics <> n var
R7884:7884 LF.Tactics <> m var
R7868:7870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7865:7865 Coq.Init.Datatypes <> S constr
R7867:7867 LF.Tactics <> n var
R7871:7871 Coq.Init.Datatypes <> S constr
R7873:7873 LF.Tactics <> m var
R7926:7928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7929:7932 Coq.Init.Peano <> pred syndef
R7935:7935 Coq.Init.Datatypes <> S constr
R7926:7928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7929:7932 Coq.Init.Peano <> pred syndef
R7935:7935 Coq.Init.Datatypes <> S constr
prf 8424:8435 <> S_injective'
R8453:8455 Coq.Init.Datatypes <> nat ind
R8470:8475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8477:8479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8476:8476 LF.Tactics <> n var
R8480:8480 LF.Tactics <> m var
R8464:8466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8461:8461 Coq.Init.Datatypes <> S constr
R8463:8463 LF.Tactics <> n var
R8467:8467 Coq.Init.Datatypes <> S constr
R8469:8469 LF.Tactics <> m var
prf 8984:8996 <> injection_ex1
R9016:9018 Coq.Init.Datatypes <> nat ind
R9037:9042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9044:9046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9043:9043 LF.Tactics <> n var
R9047:9047 LF.Tactics <> m var
R9029:9031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9024:9024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9026:9026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9028:9028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9025:9025 LF.Tactics <> n var
R9027:9027 LF.Tactics <> m var
R9032:9032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9034:9034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9036:9036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9033:9033 LF.Tactics <> o var
R9035:9035 LF.Tactics <> o var
def 9232:9244 <> injection_ex3
R9275:9275 LF.Tactics <> X var
R9285:9288 LF.Poly <> list ind
R9290:9290 LF.Tactics <> X var
R9316:9321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9332:9337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9339:9341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9338:9338 LF.Tactics <> x var
R9342:9342 LF.Tactics <> y var
R9323:9325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9322:9322 LF.Tactics <> j var
R9327:9330 LF.Poly <> :::x_'::'_x not
R9326:9326 LF.Tactics <> z var
R9331:9331 LF.Tactics <> l var
R9307:9309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9297:9300 LF.Poly <> :::x_'::'_x not
R9296:9296 LF.Tactics <> x var
R9302:9305 LF.Poly <> :::x_'::'_x not
R9301:9301 LF.Tactics <> y var
R9306:9306 LF.Tactics <> l var
R9311:9314 LF.Poly <> :::x_'::'_x not
R9310:9310 LF.Tactics <> z var
R9315:9315 LF.Tactics <> j var
prf 10193:10208 <> discriminate_ex1
R10226:10228 Coq.Init.Datatypes <> nat ind
R10246:10251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10253:10255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10252:10252 LF.Tactics <> n var
R10256:10256 LF.Tactics <> m var
R10239:10241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10234:10238 LF.Basics <> false constr
R10242:10245 LF.Basics <> true constr
prf 10322:10337 <> discriminate_ex2
R10353:10355 Coq.Init.Datatypes <> nat ind
R10368:10373 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10379:10381 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10375:10377 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10364:10366 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10361:10361 Coq.Init.Datatypes <> S constr
R10363:10363 LF.Tactics <> n var
R10367:10367 Coq.Init.Datatypes <> O constr
def 11205:11220 <> discriminate_ex3
R11253:11253 LF.Tactics <> X var
R11263:11266 LF.Poly <> list ind
R11268:11268 LF.Tactics <> X var
R11292:11299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11301:11303 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11300:11300 LF.Tactics <> x var
R11304:11304 LF.Tactics <> z var
R11287:11289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11277:11280 LF.Poly <> :::x_'::'_x not
R11276:11276 LF.Tactics <> x var
R11282:11285 LF.Poly <> :::x_'::'_x not
R11281:11281 LF.Tactics <> y var
R11286:11286 LF.Tactics <> l var
R11290:11291 LF.Poly <> :::'['_']' not
prf 11571:11577 <> eqb_0_l
R11607:11610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11612:11614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11611:11611 LF.Tactics <> n var
R11600:11602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11595:11598 LF.Basics <> ::nat_scope:x_'=?'_x not
R11599:11599 LF.Tactics <> n var
R11603:11606 LF.Basics <> true constr
prf 12497:12503 <> f_equal
R12532:12535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12536:12536 LF.Tactics <> B var
R12531:12531 LF.Tactics <> A var
R12545:12545 LF.Tactics <> A var
R12556:12559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12563:12565 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12560:12560 LF.Tactics <> f var
R12562:12562 LF.Tactics <> x var
R12566:12566 LF.Tactics <> f var
R12568:12568 LF.Tactics <> y var
R12552:12554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12551:12551 LF.Tactics <> x var
R12555:12555 LF.Tactics <> y var
prf 12640:12660 <> eq_implies_succ_equal
R12678:12680 Coq.Init.Datatypes <> nat ind
R12691:12694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12698:12700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12695:12695 Coq.Init.Datatypes <> S constr
R12697:12697 LF.Tactics <> n var
R12701:12701 Coq.Init.Datatypes <> S constr
R12703:12703 LF.Tactics <> m var
R12687:12689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12686:12686 LF.Tactics <> n var
R12690:12690 LF.Tactics <> m var
R12733:12739 LF.Tactics <> f_equal thm
R12733:12739 LF.Tactics <> f_equal thm
prf 13185:13206 <> eq_implies_succ_equal'
R13224:13226 Coq.Init.Datatypes <> nat ind
R13237:13240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13244:13246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13241:13241 Coq.Init.Datatypes <> S constr
R13243:13243 LF.Tactics <> n var
R13247:13247 Coq.Init.Datatypes <> S constr
R13249:13249 LF.Tactics <> m var
R13233:13235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13232:13232 LF.Tactics <> n var
R13236:13236 LF.Tactics <> m var
prf 13732:13736 <> S_inj
R13754:13756 Coq.Init.Datatypes <> nat ind
R13764:13767 LF.Basics <> bool ind
R13793:13799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13800:13800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13807:13810 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13802:13805 LF.Basics <> ::nat_scope:x_'=?'_x not
R13801:13801 LF.Tactics <> n var
R13806:13806 LF.Tactics <> m var
R13811:13811 LF.Tactics <> b var
R13773:13773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13788:13791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13774:13774 LF.Basics <> ::nat_scope:x_'=?'_x not
R13778:13783 LF.Basics <> ::nat_scope:x_'=?'_x not
R13787:13787 LF.Basics <> ::nat_scope:x_'=?'_x not
R13775:13775 Coq.Init.Datatypes <> S constr
R13777:13777 LF.Tactics <> n var
R13784:13784 Coq.Init.Datatypes <> S constr
R13786:13786 LF.Tactics <> m var
R13792:13792 LF.Tactics <> b var
prf 14642:14647 <> silly4
R14669:14671 Coq.Init.Datatypes <> nat ind
R14677:14677 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14692:14698 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14704:14709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14711:14713 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14710:14710 LF.Tactics <> q var
R14714:14714 LF.Tactics <> p var
R14700:14702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14699:14699 LF.Tactics <> m var
R14703:14703 LF.Tactics <> n var
R14683:14686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14688:14690 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14687:14687 LF.Tactics <> p var
R14691:14691 LF.Tactics <> q var
R14679:14681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14678:14678 LF.Tactics <> n var
R14682:14682 LF.Tactics <> m var
prf 16024:16041 <> specialize_example
R16059:16059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16077:16083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16085:16087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16084:16084 LF.Tactics <> n var
R16073:16075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16071:16071 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R16070:16070 LF.Tactics <> m var
R16072:16072 LF.Tactics <> n var
R16166:16173 LF.Induction <> add_comm thm
R16166:16173 LF.Induction <> add_comm thm
R16166:16173 LF.Induction <> add_comm thm
def 16330:16348 <> trans_eq_example'''
R16374:16376 Coq.Init.Datatypes <> nat ind
R16398:16406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16420:16428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16434:16436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16429:16429 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16431:16431 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16433:16433 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16430:16430 LF.Tactics <> a var
R16432:16432 LF.Tactics <> b var
R16437:16437 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16439:16439 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16441:16441 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16438:16438 LF.Tactics <> e var
R16440:16440 LF.Tactics <> f var
R16412:16414 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16407:16407 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16409:16409 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16411:16411 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16408:16408 LF.Tactics <> c var
R16410:16410 LF.Tactics <> d var
R16415:16415 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16417:16417 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16419:16419 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16416:16416 LF.Tactics <> e var
R16418:16418 LF.Tactics <> f var
R16390:16392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16385:16385 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16387:16387 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16389:16389 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16386:16386 LF.Tactics <> a var
R16388:16388 LF.Tactics <> b var
R16393:16393 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16395:16395 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16397:16397 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16394:16394 LF.Tactics <> c var
R16396:16396 LF.Tactics <> d var
R16512:16512 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16514:16514 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16516:16516 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16494:16501 LF.Tactics <> trans_eq thm
R16512:16512 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16514:16514 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16516:16516 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16494:16501 LF.Tactics <> trans_eq thm
prf 17714:17736 <> double_injective_FAILED
R17773:17778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17780:17782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17779:17779 LF.Tactics <> n var
R17783:17783 LF.Tactics <> m var
R17762:17764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17754:17759 LF.Induction <> double def
R17761:17761 LF.Tactics <> n var
R17765:17770 LF.Induction <> double def
R17772:17772 LF.Tactics <> m var
prf 20420:20435 <> double_injective
R20472:20477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20479:20481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20478:20478 LF.Tactics <> n var
R20482:20482 LF.Tactics <> m var
R20461:20463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20453:20458 LF.Induction <> double def
R20460:20460 LF.Tactics <> n var
R20464:20469 LF.Induction <> double def
R20471:20471 LF.Tactics <> m var
R22386:22388 LF.Basics <> eqb def
prf 22400:22407 <> eqb_true
R22438:22441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22443:22445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22442:22442 LF.Tactics <> n var
R22446:22446 LF.Tactics <> m var
R22431:22433 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22426:22429 LF.Basics <> ::nat_scope:x_'=?'_x not
R22425:22425 LF.Tactics <> n var
R22430:22430 LF.Tactics <> m var
R22434:22437 LF.Basics <> true constr
R22521:22527 LF.Tactics <> eqb_0_l thm
R22521:22527 LF.Tactics <> eqb_0_l thm
def 23001:23031 <> manual_grade_for_informal_proof
R23035:23040 Coq.Init.Datatypes <> option ind
R23046:23046 LF.Poly <> ::type_scope:x_'*'_x not
R23043:23045 Coq.Init.Datatypes <> nat ind
R23047:23052 Coq.Strings.String <> string ind
R23058:23061 Coq.Init.Datatypes <> None constr
R23299:23307 LF.Induction <> plus_n_Sm thm
prf 23319:23336 <> plus_n_n_injective
R23367:23372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23374:23376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23373:23373 LF.Tactics <> n var
R23377:23377 LF.Tactics <> m var
R23359:23361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23355:23357 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23354:23354 LF.Tactics <> n var
R23358:23358 LF.Tactics <> n var
R23363:23365 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23362:23362 LF.Tactics <> m var
R23366:23366 LF.Tactics <> m var
R23575:23583 LF.Induction <> plus_n_Sm thm
R23575:23583 LF.Induction <> plus_n_Sm thm
R23575:23583 LF.Induction <> plus_n_Sm thm
R23603:23611 LF.Induction <> plus_n_Sm thm
R23603:23611 LF.Induction <> plus_n_Sm thm
R23603:23611 LF.Induction <> plus_n_Sm thm
prf 24016:24044 <> double_injective_take2_FAILED
R24081:24086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24088:24090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24087:24087 LF.Tactics <> n var
R24091:24091 LF.Tactics <> m var
R24070:24072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24062:24067 LF.Induction <> double def
R24069:24069 LF.Tactics <> n var
R24073:24078 LF.Induction <> double def
R24080:24080 LF.Tactics <> m var
prf 25331:25352 <> double_injective_take2
R25389:25394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25396:25398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25395:25395 LF.Tactics <> n var
R25399:25399 LF.Tactics <> m var
R25378:25380 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25370:25375 LF.Induction <> double def
R25377:25377 LF.Tactics <> n var
R25381:25386 LF.Induction <> double def
R25388:25388 LF.Tactics <> m var
prf 28074:28093 <> nth_error_after_last
R28108:28110 Coq.Init.Datatypes <> nat ind
R28129:28132 LF.Poly <> list ind
R28134:28134 LF.Tactics <> X var
R28152:28157 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28171:28173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28158:28166 LF.Poly <> nth_error def
R28170:28170 LF.Tactics <> n var
R28168:28168 LF.Tactics <> l var
R28174:28177 Coq.Init.Datatypes <> None constr
R28148:28150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28140:28145 LF.Poly <> length def
R28147:28147 LF.Tactics <> l var
R28151:28151 LF.Tactics <> n var
def 28798:28803 <> square
R28811:28813 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28810:28810 LF.Tactics <> n var
R28814:28814 LF.Tactics <> n var
prf 28884:28894 <> square_mult
R28924:28926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28910:28915 LF.Tactics <> square def
R28919:28921 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28918:28918 LF.Tactics <> n var
R28922:28922 LF.Tactics <> m var
R28935:28937 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28927:28932 LF.Tactics <> square def
R28934:28934 LF.Tactics <> n var
R28938:28943 LF.Tactics <> square def
R28945:28945 LF.Tactics <> m var
R29259:29264 LF.Tactics <> square def
R29583:29592 LF.Induction <> mult_assoc prfax
R29583:29592 LF.Induction <> mult_assoc prfax
R29583:29592 LF.Induction <> mult_assoc prfax
R29618:29620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29614:29616 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29610:29612 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29626:29628 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29622:29624 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29618:29620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29614:29616 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29610:29612 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29626:29628 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29622:29624 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29647:29654 LF.Induction <> mul_comm prfax
R29647:29654 LF.Induction <> mul_comm prfax
R29647:29654 LF.Induction <> mul_comm prfax
R29663:29672 LF.Induction <> mult_assoc prfax
R29663:29672 LF.Induction <> mult_assoc prfax
R29698:29707 LF.Induction <> mult_assoc prfax
R29698:29707 LF.Induction <> mult_assoc prfax
R29698:29707 LF.Induction <> mult_assoc prfax
def 30094:30096 <> foo
R30102:30104 Coq.Init.Datatypes <> nat ind
prf 30321:30332 <> silly_fact_1
R30355:30357 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30351:30353 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30346:30348 LF.Tactics <> foo def
R30350:30350 LF.Tactics <> m var
R30369:30371 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30358:30360 LF.Tactics <> foo def
R30364:30366 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30363:30363 LF.Tactics <> m var
def 30599:30601 <> bar
R30616:30616 LF.Tactics <> x var
R30627:30627 Coq.Init.Datatypes <> O constr
R30638:30638 Coq.Init.Datatypes <> S constr
prf 30712:30730 <> silly_fact_2_FAILED
R30753:30755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30749:30751 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30744:30746 LF.Tactics <> bar def
R30748:30748 LF.Tactics <> m var
R30767:30769 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30756:30758 LF.Tactics <> bar def
R30762:30764 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30761:30761 LF.Tactics <> m var
prf 31756:31767 <> silly_fact_2
R31790:31792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31786:31788 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31781:31783 LF.Tactics <> bar def
R31785:31785 LF.Tactics <> m var
R31804:31806 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31793:31795 LF.Tactics <> bar def
R31799:31801 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31798:31798 LF.Tactics <> m var
prf 32154:32166 <> silly_fact_2'
R32189:32191 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32185:32187 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32180:32182 LF.Tactics <> bar def
R32184:32184 LF.Tactics <> m var
R32203:32205 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32192:32194 LF.Tactics <> bar def
R32198:32200 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32197:32197 LF.Tactics <> m var
R32237:32239 LF.Tactics <> bar def
def 32884:32891 <> sillyfun
R32898:32900 Coq.Init.Datatypes <> nat ind
R32905:32908 LF.Basics <> bool ind
R32919:32922 LF.Basics <> ::nat_scope:x_'=?'_x not
R32918:32918 LF.Tactics <> n var
R32947:32950 LF.Basics <> ::nat_scope:x_'=?'_x not
R32946:32946 LF.Tactics <> n var
R32971:32975 LF.Basics <> false constr
R32958:32962 LF.Basics <> false constr
R32930:32934 LF.Basics <> false constr
prf 32987:33000 <> sillyfun_false
R33016:33018 Coq.Init.Datatypes <> nat ind
R33034:33036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33024:33031 LF.Tactics <> sillyfun def
R33033:33033 LF.Tactics <> n var
R33037:33041 LF.Basics <> false constr
R33070:33077 LF.Tactics <> sillyfun def
R33093:33096 LF.Basics <> ::nat_scope:x_'=?'_x not
R33093:33096 LF.Basics <> ::nat_scope:x_'=?'_x not
R33185:33188 LF.Basics <> ::nat_scope:x_'=?'_x not
R33185:33188 LF.Basics <> ::nat_scope:x_'=?'_x not
def 34061:34065 <> split
R34085:34088 LF.Poly <> list ind
R34092:34092 LF.Poly <> ::type_scope:x_'*'_x not
R34091:34091 LF.Tactics <> X var
R34093:34093 LF.Tactics <> Y var
R34114:34114 LF.Poly <> ::type_scope:x_'*'_x not
R34121:34125 LF.Poly <> ::type_scope:x_'*'_x not
R34132:34132 LF.Poly <> ::type_scope:x_'*'_x not
R34115:34118 LF.Poly <> list ind
R34120:34120 LF.Tactics <> X var
R34126:34129 LF.Poly <> list ind
R34131:34131 LF.Tactics <> Y var
R34145:34145 LF.Tactics <> l var
R34156:34157 LF.Poly <> :::'['_']' not
R34162:34162 LF.Poly <> :::'('_x_','_x_')' not
R34165:34166 LF.Poly <> :::'('_x_','_x_')' not
R34169:34169 LF.Poly <> :::'('_x_','_x_')' not
R34163:34164 LF.Poly <> :::'['_']' not
R34167:34168 LF.Poly <> :::'['_']' not
R34181:34184 LF.Poly <> :::x_'::'_x not
R34175:34175 LF.Poly <> :::'('_x_','_x_')' not
R34177:34178 LF.Poly <> :::'('_x_','_x_')' not
R34180:34180 LF.Poly <> :::'('_x_','_x_')' not
R34202:34206 LF.Tactics <> split def
R34223:34223 LF.Poly <> :::'('_x_','_x_')' not
R34226:34227 LF.Poly <> :::'('_x_','_x_')' not
R34230:34230 LF.Poly <> :::'('_x_','_x_')' not
R34235:34235 LF.Poly <> :::'('_x_','_x_')' not
R34243:34244 LF.Poly <> :::'('_x_','_x_')' not
R34252:34252 LF.Poly <> :::'('_x_','_x_')' not
R34237:34240 LF.Poly <> :::x_'::'_x not
R34246:34249 LF.Poly <> :::x_'::'_x not
prf 34477:34489 <> combine_split
R34509:34512 LF.Poly <> list ind
R34516:34518 LF.Poly <> ::type_scope:x_'*'_x not
R34515:34515 LF.Tactics <> X var
R34519:34519 LF.Tactics <> Y var
R34550:34555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34569:34571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34556:34562 LF.Poly <> combine def
R34567:34568 LF.Tactics <> l2 var
R34564:34565 LF.Tactics <> l1 var
R34572:34572 LF.Tactics <> l var
R34539:34541 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34532:34536 LF.Tactics <> split def
R34538:34538 LF.Tactics <> l var
R34542:34542 LF.Poly <> :::'('_x_','_x_')' not
R34545:34546 LF.Poly <> :::'('_x_','_x_')' not
R34549:34549 LF.Poly <> :::'('_x_','_x_')' not
R34543:34544 LF.Tactics <> l1 var
R34547:34548 LF.Tactics <> l2 var
R34820:34824 LF.Tactics <> split def
R34820:34824 LF.Tactics <> split def
R34926:34930 LF.Tactics <> split def
R34926:34930 LF.Tactics <> split def
R35022:35024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35014:35018 LF.Tactics <> split def
R35025:35025 LF.Poly <> :::'('_x_','_x_')' not
R35028:35029 LF.Poly <> :::'('_x_','_x_')' not
R35032:35032 LF.Poly <> :::'('_x_','_x_')' not
R35022:35024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35014:35018 LF.Tactics <> split def
R35025:35025 LF.Poly <> :::'('_x_','_x_')' not
R35028:35029 LF.Poly <> :::'('_x_','_x_')' not
R35032:35032 LF.Poly <> :::'('_x_','_x_')' not
R35074:35078 LF.Tactics <> split def
R35074:35078 LF.Tactics <> split def
R35228:35232 LF.Tactics <> split def
R35228:35232 LF.Tactics <> split def
def 35840:35848 <> sillyfun1
R35855:35857 Coq.Init.Datatypes <> nat ind
R35862:35865 LF.Basics <> bool ind
R35876:35879 LF.Basics <> ::nat_scope:x_'=?'_x not
R35875:35875 LF.Tactics <> n var
R35903:35906 LF.Basics <> ::nat_scope:x_'=?'_x not
R35902:35902 LF.Tactics <> n var
R35926:35930 LF.Basics <> false constr
R35914:35917 LF.Basics <> true constr
R35887:35890 LF.Basics <> true constr
prf 36125:36144 <> sillyfun1_odd_FAILED
R36160:36162 Coq.Init.Datatypes <> nat ind
R36186:36191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36197:36199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36192:36194 LF.Basics <> odd def
R36196:36196 LF.Tactics <> n var
R36200:36203 LF.Basics <> true constr
R36179:36181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36168:36176 LF.Tactics <> sillyfun1 def
R36178:36178 LF.Tactics <> n var
R36182:36185 LF.Basics <> true constr
R36235:36243 LF.Tactics <> sillyfun1 def
R36265:36268 LF.Basics <> ::nat_scope:x_'=?'_x not
R36265:36268 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 37086:37098 <> sillyfun1_odd
R37114:37116 Coq.Init.Datatypes <> nat ind
R37140:37145 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37151:37153 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37146:37148 LF.Basics <> odd def
R37150:37150 LF.Tactics <> n var
R37154:37157 LF.Basics <> true constr
R37133:37135 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37122:37130 LF.Tactics <> sillyfun1 def
R37132:37132 LF.Tactics <> n var
R37136:37139 LF.Basics <> true constr
R37189:37197 LF.Tactics <> sillyfun1 def
R37219:37222 LF.Basics <> ::nat_scope:x_'=?'_x not
R37219:37222 LF.Basics <> ::nat_scope:x_'=?'_x not
R37472:37479 LF.Tactics <> eqb_true thm
R37472:37479 LF.Tactics <> eqb_true thm
R37774:37777 LF.Basics <> ::nat_scope:x_'=?'_x not
R37774:37777 LF.Basics <> ::nat_scope:x_'=?'_x not
R37834:37841 LF.Tactics <> eqb_true thm
R37834:37841 LF.Tactics <> eqb_true thm
prf 38017:38038 <> bool_fn_applied_thrice
R38060:38063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38064:38067 LF.Basics <> bool ind
R38056:38059 LF.Basics <> bool ind
R38075:38078 LF.Basics <> bool ind
R38097:38099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38086:38086 LF.Tactics <> f var
R38089:38089 LF.Tactics <> f var
R38092:38092 LF.Tactics <> f var
R38094:38094 LF.Tactics <> b var
R38100:38100 LF.Tactics <> f var
R38102:38102 LF.Tactics <> b var
R38182:38184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38178:38181 LF.Basics <> true constr
R38192:38195 LF.Basics <> true constr
R38182:38184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38178:38181 LF.Basics <> true constr
R38192:38195 LF.Basics <> true constr
R38301:38304 LF.Basics <> true constr
R38301:38304 LF.Basics <> true constr
R38541:38545 LF.Basics <> false constr
R38541:38545 LF.Basics <> false constr
R41266:41268 LF.Basics <> eqb def
prf 41330:41336 <> eqb_sym
R41354:41356 Coq.Init.Datatypes <> nat ind
R41362:41362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41369:41373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41380:41380 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41364:41367 LF.Basics <> ::nat_scope:x_'=?'_x not
R41363:41363 LF.Tactics <> n var
R41368:41368 LF.Tactics <> m var
R41375:41378 LF.Basics <> ::nat_scope:x_'=?'_x not
R41374:41374 LF.Tactics <> m var
R41379:41379 LF.Tactics <> n var
R41417:41420 LF.Basics <> ::nat_scope:x_'=?'_x not
R41417:41420 LF.Basics <> ::nat_scope:x_'=?'_x not
R41452:41459 LF.Tactics <> eqb_true thm
R41452:41459 LF.Tactics <> eqb_true thm
R41484:41491 LF.Induction <> eqb_refl thm
R41484:41491 LF.Induction <> eqb_refl thm
prf 42785:42793 <> eqb_trans
R42826:42831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42845:42850 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42857:42859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42852:42855 LF.Basics <> ::nat_scope:x_'=?'_x not
R42851:42851 LF.Tactics <> n var
R42856:42856 LF.Tactics <> p var
R42860:42863 LF.Basics <> true constr
R42838:42840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42833:42836 LF.Basics <> ::nat_scope:x_'=?'_x not
R42832:42832 LF.Tactics <> m var
R42837:42837 LF.Tactics <> p var
R42841:42844 LF.Basics <> true constr
R42819:42821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42814:42817 LF.Basics <> ::nat_scope:x_'=?'_x not
R42813:42813 LF.Tactics <> n var
R42818:42818 LF.Tactics <> m var
R42822:42825 LF.Basics <> true constr
R42874:42876 LF.Basics <> eqb def
R42921:42928 LF.Tactics <> eqb_true thm
R42921:42928 LF.Tactics <> eqb_true thm
R42944:42951 LF.Tactics <> eqb_true thm
R42944:42951 LF.Tactics <> eqb_true thm
R43002:43009 LF.Induction <> eqb_refl thm
R43002:43009 LF.Induction <> eqb_refl thm
def 43556:43578 <> split_combine_statement
prf 43752:43764 <> split_combine
R43768:43790 LF.Tactics <> split_combine_statement prfax
def 43881:43910 <> manual_grade_for_split_combine
R43914:43919 Coq.Init.Datatypes <> option ind
R43925:43925 LF.Poly <> ::type_scope:x_'*'_x not
R43922:43924 Coq.Init.Datatypes <> nat ind
R43926:43931 Coq.Strings.String <> string ind
R43937:43940 Coq.Init.Datatypes <> None constr
prf 44020:44034 <> filter_exercise
R44065:44068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44069:44072 LF.Basics <> bool ind
R44064:44064 LF.Tactics <> X var
R44113:44113 LF.Tactics <> X var
R44124:44127 LF.Poly <> list ind
R44129:44129 LF.Tactics <> X var
R44158:44163 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44170:44172 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44164:44167 LF.Tactics <> test var
R44169:44169 LF.Tactics <> x var
R44173:44176 LF.Basics <> true constr
R44148:44150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44135:44140 LF.Poly <> filter def
R44147:44147 LF.Tactics <> l var
R44142:44145 LF.Tactics <> test var
R44152:44155 LF.Poly <> :::x_'::'_x not
R44151:44151 LF.Tactics <> x var
R44156:44157 LF.Tactics <> lf var
def 45115:45121 <> forallb
R45143:45146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45147:45150 LF.Basics <> bool ind
R45142:45142 LF.Tactics <> X var
R45158:45161 LF.Poly <> list ind
R45163:45163 LF.Tactics <> X var
R45168:45171 LF.Basics <> bool ind
def 45249:45262 <> test_forallb_1
R45289:45291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45266:45272 LF.Tactics <> forallb prfax
R45278:45278 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45280:45280 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45282:45282 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45284:45284 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45286:45286 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45288:45288 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45274:45276 LF.Basics <> odd def
R45292:45295 LF.Basics <> true constr
def 45343:45356 <> test_forallb_2
R45386:45388 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45360:45366 LF.Tactics <> forallb prfax
R45373:45373 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45379:45379 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45385:45385 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45374:45378 LF.Basics <> false constr
R45380:45384 LF.Basics <> false constr
R45368:45371 LF.Basics <> negb def
R45389:45392 LF.Basics <> true constr
def 45440:45453 <> test_forallb_3
R45479:45481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45457:45463 LF.Tactics <> forallb prfax
R45470:45470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45472:45472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45474:45474 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45476:45476 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45478:45478 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45465:45468 LF.Basics <> even def
R45482:45486 LF.Basics <> false constr
def 45534:45547 <> test_forallb_4
R45569:45571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45551:45557 LF.Tactics <> forallb prfax
R45567:45568 LF.Poly <> :::'['_']' not
R45560:45562 LF.Basics <> eqb def
R45572:45575 LF.Basics <> true constr
def 45624:45630 <> existsb
R45652:45655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45656:45659 LF.Basics <> bool ind
R45651:45651 LF.Tactics <> X var
R45667:45670 LF.Poly <> list ind
R45672:45672 LF.Tactics <> X var
R45677:45680 LF.Basics <> bool ind
def 45758:45771 <> test_existsb_1
R45800:45802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45775:45781 LF.Tactics <> existsb prfax
R45791:45791 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45793:45793 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45795:45795 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45797:45797 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45799:45799 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45784:45786 LF.Basics <> eqb def
R45803:45807 LF.Basics <> false constr
def 45855:45868 <> test_existsb_2
R45909:45911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45872:45878 LF.Tactics <> existsb prfax
R45892:45892 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45897:45897 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45902:45902 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45908:45908 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45893:45896 LF.Basics <> true constr
R45898:45901 LF.Basics <> true constr
R45903:45907 LF.Basics <> false constr
R45881:45884 LF.Basics <> andb def
R45886:45889 LF.Basics <> true constr
R45912:45915 LF.Basics <> true constr
def 45963:45976 <> test_existsb_3
R46005:46007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45980:45986 LF.Tactics <> existsb prfax
R45992:45992 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45994:45994 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45996:45996 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45998:45998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R46000:46000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R46002:46002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R46004:46004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45988:45990 LF.Basics <> odd def
R46008:46011 LF.Basics <> true constr
def 46059:46072 <> test_existsb_4
R46091:46093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46076:46082 LF.Tactics <> existsb prfax
R46089:46090 LF.Poly <> :::'['_']' not
R46084:46087 LF.Basics <> even def
R46094:46098 LF.Basics <> false constr
def 46149:46156 <> existsb'
R46178:46181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46182:46185 LF.Basics <> bool ind
R46177:46177 LF.Tactics <> X var
R46193:46196 LF.Poly <> list ind
R46198:46198 LF.Tactics <> X var
R46203:46206 LF.Basics <> bool ind
prf 46284:46299 <> existsb_existsb'
R46330:46333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46334:46337 LF.Basics <> bool ind
R46329:46329 LF.Tactics <> X var
R46345:46348 LF.Poly <> list ind
R46350:46350 LF.Tactics <> X var
R46370:46372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46356:46362 LF.Tactics <> existsb prfax
R46369:46369 LF.Tactics <> l var
R46364:46367 LF.Tactics <> test var
R46373:46380 LF.Tactics <> existsb' prfax
R46387:46387 LF.Tactics <> l var
R46382:46385 LF.Tactics <> test var
